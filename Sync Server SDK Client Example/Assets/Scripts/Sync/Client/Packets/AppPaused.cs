// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct AppPaused : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static AppPaused GetRootAsAppPaused(ByteBuffer _bb) { return GetRootAsAppPaused(_bb, new AppPaused()); }
  public static AppPaused GetRootAsAppPaused(ByteBuffer _bb, AppPaused obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public AppPaused __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public short Opcode { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetShort(o + __p.bb_pos) : (short)23; } }

  public static Offset<AppPaused> CreateAppPaused(FlatBufferBuilder builder,
      short opcode = 23) {
    builder.StartTable(1);
    AppPaused.AddOpcode(builder, opcode);
    return AppPaused.EndAppPaused(builder);
  }

  public static void StartAppPaused(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddOpcode(FlatBufferBuilder builder, short opcode) { builder.AddShort(0, opcode, 23); }
  public static Offset<AppPaused> EndAppPaused(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AppPaused>(o);
  }
};

