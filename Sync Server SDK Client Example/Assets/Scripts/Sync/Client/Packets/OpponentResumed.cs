// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct OpponentResumed : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static OpponentResumed GetRootAsOpponentResumed(ByteBuffer _bb) { return GetRootAsOpponentResumed(_bb, new OpponentResumed()); }
  public static OpponentResumed GetRootAsOpponentResumed(ByteBuffer _bb, OpponentResumed obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public OpponentResumed __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public short Opcode { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetShort(o + __p.bb_pos) : (short)8; } }

  public static Offset<OpponentResumed> CreateOpponentResumed(FlatBufferBuilder builder,
      short opcode = 8) {
    builder.StartTable(1);
    OpponentResumed.AddOpcode(builder, opcode);
    return OpponentResumed.EndOpponentResumed(builder);
  }

  public static void StartOpponentResumed(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddOpcode(FlatBufferBuilder builder, short opcode) { builder.AddShort(0, opcode, 8); }
  public static Offset<OpponentResumed> EndOpponentResumed(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<OpponentResumed>(o);
  }
};

