// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct PlayerInput : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static PlayerInput GetRootAsPlayerInput(ByteBuffer _bb) { return GetRootAsPlayerInput(_bb, new PlayerInput()); }
  public static PlayerInput GetRootAsPlayerInput(ByteBuffer _bb, PlayerInput obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PlayerInput __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public short Opcode { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetShort(o + __p.bb_pos) : (short)13; } }
  public int NewScore { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<PlayerInput> CreatePlayerInput(FlatBufferBuilder builder,
      short opcode = 13,
      int newScore = 0) {
    builder.StartTable(2);
    PlayerInput.AddNewScore(builder, newScore);
    PlayerInput.AddOpcode(builder, opcode);
    return PlayerInput.EndPlayerInput(builder);
  }

  public static void StartPlayerInput(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddOpcode(FlatBufferBuilder builder, short opcode) { builder.AddShort(0, opcode, 13); }
  public static void AddNewScore(FlatBufferBuilder builder, int newScore) { builder.AddInt(1, newScore, 0); }
  public static Offset<PlayerInput> EndPlayerInput(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<PlayerInput>(o);
  }
};

