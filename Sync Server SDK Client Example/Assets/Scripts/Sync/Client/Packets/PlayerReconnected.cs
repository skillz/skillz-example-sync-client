// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct PlayerReconnected : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static PlayerReconnected GetRootAsPlayerReconnected(ByteBuffer _bb) { return GetRootAsPlayerReconnected(_bb, new PlayerReconnected()); }
  public static PlayerReconnected GetRootAsPlayerReconnected(ByteBuffer _bb, PlayerReconnected obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PlayerReconnected __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public short Opcode { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetShort(o + __p.bb_pos) : (short)10; } }
  public long PlayerReconnectedUserId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<PlayerReconnected> CreatePlayerReconnected(FlatBufferBuilder builder,
      short opcode = 10,
      long playerReconnectedUserId = 0) {
    builder.StartTable(2);
    PlayerReconnected.AddPlayerReconnectedUserId(builder, playerReconnectedUserId);
    PlayerReconnected.AddOpcode(builder, opcode);
    return PlayerReconnected.EndPlayerReconnected(builder);
  }

  public static void StartPlayerReconnected(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddOpcode(FlatBufferBuilder builder, short opcode) { builder.AddShort(0, opcode, 10); }
  public static void AddPlayerReconnectedUserId(FlatBufferBuilder builder, long playerReconnectedUserId) { builder.AddLong(1, playerReconnectedUserId, 0); }
  public static Offset<PlayerReconnected> EndPlayerReconnected(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<PlayerReconnected>(o);
  }
};

