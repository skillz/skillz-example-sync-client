// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct KeepAlive : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static KeepAlive GetRootAsKeepAlive(ByteBuffer _bb) { return GetRootAsKeepAlive(_bb, new KeepAlive()); }
  public static KeepAlive GetRootAsKeepAlive(ByteBuffer _bb, KeepAlive obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public KeepAlive __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public short Opcode { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetShort(o + __p.bb_pos) : (short)2; } }
  public bool Success { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<KeepAlive> CreateKeepAlive(FlatBufferBuilder builder,
      short opcode = 2,
      bool success = false) {
    builder.StartTable(2);
    KeepAlive.AddOpcode(builder, opcode);
    KeepAlive.AddSuccess(builder, success);
    return KeepAlive.EndKeepAlive(builder);
  }

  public static void StartKeepAlive(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddOpcode(FlatBufferBuilder builder, short opcode) { builder.AddShort(0, opcode, 2); }
  public static void AddSuccess(FlatBufferBuilder builder, bool success) { builder.AddBool(1, success, false); }
  public static Offset<KeepAlive> EndKeepAlive(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<KeepAlive>(o);
  }
};

