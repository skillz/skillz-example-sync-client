// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct OpponentConnectionStatus : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static OpponentConnectionStatus GetRootAsOpponentConnectionStatus(ByteBuffer _bb) { return GetRootAsOpponentConnectionStatus(_bb, new OpponentConnectionStatus()); }
  public static OpponentConnectionStatus GetRootAsOpponentConnectionStatus(ByteBuffer _bb, OpponentConnectionStatus obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public OpponentConnectionStatus __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public short Opcode { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetShort(o + __p.bb_pos) : (short)9; } }
  public short Status { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetShort(o + __p.bb_pos) : (short)0; } }
  public short TimeRemaining { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetShort(o + __p.bb_pos) : (short)0; } }

  public static Offset<OpponentConnectionStatus> CreateOpponentConnectionStatus(FlatBufferBuilder builder,
      short opcode = 9,
      short status = 0,
      short timeRemaining = 0) {
    builder.StartTable(3);
    OpponentConnectionStatus.AddTimeRemaining(builder, timeRemaining);
    OpponentConnectionStatus.AddStatus(builder, status);
    OpponentConnectionStatus.AddOpcode(builder, opcode);
    return OpponentConnectionStatus.EndOpponentConnectionStatus(builder);
  }

  public static void StartOpponentConnectionStatus(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddOpcode(FlatBufferBuilder builder, short opcode) { builder.AddShort(0, opcode, 9); }
  public static void AddStatus(FlatBufferBuilder builder, short status) { builder.AddShort(1, status, 0); }
  public static void AddTimeRemaining(FlatBufferBuilder builder, short timeRemaining) { builder.AddShort(2, timeRemaining, 0); }
  public static Offset<OpponentConnectionStatus> EndOpponentConnectionStatus(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<OpponentConnectionStatus>(o);
  }
};

